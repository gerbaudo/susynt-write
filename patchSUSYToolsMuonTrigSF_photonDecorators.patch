Index: SUSYTools/Root/SUSYObjDef_xAOD.cxx
===================================================================
--- SUSYTools/Root/SUSYObjDef_xAOD.cxx	(revision 757773)
+++ SUSYTools/Root/SUSYObjDef_xAOD.cxx	(working copy)
@@ -98,6 +98,9 @@
 static SG::AuxElement::Decorator<double> dec_effscalefact("effscalefact");
 static SG::AuxElement::Decorator<double> dec_jvtscalefact("jvtscalefact");
 
+static SG::AuxElement::Decorator<char> dec_photonPassCleaning("passCleaning");
+static SG::AuxElement::Decorator<char> dec_photonPassAmbiguity("passAmbiguity");
+
 static SG::AuxElement::Accessor<unsigned int> randomrunnumber("RandomRunNumber");
 
 
@@ -2038,6 +2041,10 @@
   dec_baseline(input) = false;
   dec_isol(input) = false;
 
+  dec_photonPassCleaning(input) = false;
+  dec_photonPassAmbiguity(input) = false;
+  if(m_egammaAmbiguityTool->accept( input )) dec_photonPassAmbiguity(input) = true;
+
   // Author cuts needed according to https://twiki.cern.ch/twiki/bin/view/AtlasProtected/EGammaIdentificationRun2#Photon_authors
   if ( !(input.author() & (xAOD::EgammaParameters::AuthorPhoton + xAOD::EgammaParameters::AuthorAmbiguous)) )
     return StatusCode::SUCCESS;
@@ -2062,6 +2069,7 @@
   float ph_rphi = input.showerShapeValue(xAOD::EgammaParameters::Rphi);
 
   if ( (ph_OQ & 134217728) != 0 && (ph_reta > 0.98 || ph_rphi > 1.0 || (ph_OQ & 67108864) != 0) ) return StatusCode::SUCCESS;
+  dec_photonPassCleaning(input) = true;
 
   if (!isAtlfast() && !isData()) {
     if ( m_electronPhotonShowerShapeFudgeTool->applyCorrection(input) != CP::CorrectionCode::Ok)
@@ -3109,9 +3117,12 @@
 
   double eff(1.);
 
+    #warning setting muon trigger efficiency to one
+    /*
   if (m_muonTriggerSFTool->getTriggerEfficiency(mu, eff, trigExpr, m_dataSource) != CP::CorrectionCode::Ok) {
     ATH_MSG_WARNING("Problem retrieving signal muon trigger efficiency.");
   }
+    */
 
   return eff;
 }
@@ -3134,11 +3145,14 @@
       ATH_MSG_WARNING("Di-muon trigger SF are provided only for events with exaclty two muons!!! Returning 1.");
     }
     else {
+        #warning not applying muon trigger SF
+       /* 
       if (m_muonTriggerSFTool->getTriggerScaleFactor( *sfmuons.asDataVector(), trig_sf, trigExpr ) == CP::CorrectionCode::Ok) {
         sf *= trig_sf;
       } else {
         ATH_MSG_WARNING("Problem retrieving muon trigger SF");
       }
+        */
     }
   }
 
@@ -3794,8 +3808,9 @@
 
 StatusCode SUSYObjDef_xAOD::setRunNumber(const int run_number) {
 
-  CP::CorrectionCode res = m_muonTriggerSFTool->setRunNumber(run_number);
-  if (res != CP::CorrectionCode::Ok) return StatusCode::FAILURE;
+    #warning not setting run number for muon trigger SF tool
+  //CP::CorrectionCode res = m_muonTriggerSFTool->setRunNumber(run_number);
+  //if (res != CP::CorrectionCode::Ok) return StatusCode::FAILURE;
 
   return StatusCode::SUCCESS;
 }
