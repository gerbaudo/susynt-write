Index: SUSYTools/Root/Jets.cxx
===================================================================
--- SUSYTools/Root/Jets.cxx	(revision 791265)
+++ SUSYTools/Root/Jets.cxx	(working copy)
@@ -369,7 +369,7 @@
   bool SUSYObjDef_xAOD::IsBadJet(const xAOD::Jet& input)
   {
 
-    if ( !dec_passOR(input) ) return false;
+    //if ( !dec_passOR(input) ) return false;
 
     float ptcut = 20e3;
     bool  isPileup = !dec_passJvt(input);
Index: SUSYTools/Root/SUSYObjDef_xAOD.cxx
===================================================================
--- SUSYTools/Root/SUSYObjDef_xAOD.cxx	(revision 791265)
+++ SUSYTools/Root/SUSYObjDef_xAOD.cxx	(working copy)
@@ -305,7 +305,9 @@
     acc_truthType("truthType"),
     acc_truthOrigin("truthOrigin"),
     acc_bkgTruthOrigin("bkgTruthOrigin"),
-    randomrunnumber("RandomRunNumber")
+    randomrunnumber("RandomRunNumber"),
+    dec_photonPassCleaning("passCleaning"),
+    dec_photonPassAmbiguity("passAmbiguity")
 {
   //General settings
   declareProperty( "DataSource", m_dataSource = Undefined );
@@ -2057,11 +2059,11 @@
   return m_prwTool->getDataWeight( *evtInfo, trig );
 }
 
-float SUSYObjDef_xAOD::GetCorrectedAverageInteractionsPerCrossing() {
+float SUSYObjDef_xAOD::GetCorrectedAverageInteractionsPerCrossing(bool includeDataSF) {
 
   const xAOD::EventInfo* evtInfo = 0;
   ATH_CHECK( evtStore()->retrieve( evtInfo, "EventInfo" ) );
-  return m_prwTool->getCorrectedMu( *evtInfo );
+  return m_prwTool->getCorrectedMu( *evtInfo, includeDataSF );
 }
 
 double SUSYObjDef_xAOD::GetSumOfWeights(int channel) {
Index: SUSYTools/Root/Photons.cxx
===================================================================
--- SUSYTools/Root/Photons.cxx	(revision 791265)
+++ SUSYTools/Root/Photons.cxx	(working copy)
@@ -101,6 +101,10 @@
   dec_baseline(input) = false;
   dec_isol(input) = false;
 
+  dec_photonPassCleaning(input) = false;
+  dec_photonPassAmbiguity(input) = false;
+  if(m_egammaAmbiguityTool->accept( input )) dec_photonPassAmbiguity(input) = true; 
+
   // Author cuts needed according to https://twiki.cern.ch/twiki/bin/view/AtlasProtected/EGammaIdentificationRun2#Photon_authors
   if ( !(input.author() & (xAOD::EgammaParameters::AuthorPhoton + xAOD::EgammaParameters::AuthorAmbiguous)) )
     return StatusCode::SUCCESS;
@@ -134,6 +138,8 @@
       return StatusCode::SUCCESS;
     }
 
+  dec_photonPassCleaning(input) = true;
+
   if (!isAtlfast() && !isData()) {
     if ( m_electronPhotonShowerShapeFudgeTool->applyCorrection(input) != CP::CorrectionCode::Ok)
       ATH_MSG_ERROR("FillPhoton - fudge tool: applyCorrection failed");
Index: SUSYTools/SUSYTools/ISUSYObjDef_xAODTool.h
===================================================================
--- SUSYTools/SUSYTools/ISUSYObjDef_xAODTool.h	(revision 791265)
+++ SUSYTools/SUSYTools/ISUSYObjDef_xAODTool.h	(working copy)
@@ -303,7 +303,7 @@
 
     virtual float GetDataWeight(const std::string&) = 0;
  
-    virtual float GetCorrectedAverageInteractionsPerCrossing() = 0;
+    virtual float GetCorrectedAverageInteractionsPerCrossing(bool includeDataSF) = 0;
 
     virtual double GetSumOfWeights(int channel) = 0;
     
Index: SUSYTools/SUSYTools/SUSYObjDef_xAOD.h
===================================================================
--- SUSYTools/SUSYTools/SUSYObjDef_xAOD.h	(revision 791265)
+++ SUSYTools/SUSYTools/SUSYObjDef_xAOD.h	(working copy)
@@ -287,7 +287,7 @@
 
     float GetDataWeight(const std::string&);
 
-    float GetCorrectedAverageInteractionsPerCrossing();
+    float GetCorrectedAverageInteractionsPerCrossing(bool includeDataSF=false);
 
     double GetSumOfWeights(int channel);
 
@@ -684,6 +684,8 @@
     SG::AuxElement::Accessor<int> acc_truthOrigin;
     SG::AuxElement::Accessor<int> acc_bkgTruthOrigin;
     SG::AuxElement::Accessor<unsigned int> randomrunnumber;
+    SG::AuxElement::Decorator<char> dec_photonPassCleaning;
+    SG::AuxElement::Decorator<char> dec_photonPassAmbiguity;
 
   }; // Class SUSYObjDef_xAOD
 
